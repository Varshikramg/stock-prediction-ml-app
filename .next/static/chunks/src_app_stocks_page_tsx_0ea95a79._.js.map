{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/stocks/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport axios from 'axios';\n\ntype StockData = {\n  company: string;\n  symbol: string;\n  predictedPrice: number;\n  timestamp: string;\n  note?: string;\n};\n\ntype PredictionResponse = {\n  success: boolean;\n  data: StockData[];\n  message: string;\n  error?: string;\n};\n\nexport default function StocksPage() {\n  const [stocks, setStocks] = useState<StockData[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<string | null>(null);\n  const [backendStatus, setBackendStatus] = useState<'checking' | 'online' | 'offline'>('checking');\n\n  // Check backend health on component mount\n  useEffect(() => {\n    checkBackendHealth();\n  }, []);\n\n  const checkBackendHealth = async () => {\n    try {\n      setBackendStatus('checking');\n      const response = await axios.get('http://localhost:5000/health', { timeout: 5000 });\n      if (response.data.status === 'healthy') {\n        setBackendStatus('online');\n      } else {\n        setBackendStatus('offline');\n      }\n    } catch (error) {\n      console.error('Backend health check failed:', error);\n      setBackendStatus('offline');\n    }\n  };\n\n  const fetchPredictions = async () => {\n    if (backendStatus !== 'online') {\n      setError('Backend server is not available. Please start the Python Flask server.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await axios.post<PredictionResponse>(\n        'http://localhost:5000/predict',\n        {},\n        {\n          headers: { 'Content-Type': 'application/json' },\n          timeout: 60000 // 60 second timeout for ML predictions\n        }\n      );\n\n      if (response.data.success) {\n        setStocks(response.data.data);\n        setLastUpdated(new Date().toLocaleString());\n      } else {\n        setError(response.data.error || 'Unknown error occurred');\n      }\n    } catch (err: any) {\n      console.error('Prediction error:', err);\n      if (err.code === 'ECONNREFUSED') {\n        setError('Cannot connect to Python backend. Please ensure the Flask server is running on port 5000.');\n      } else if (err.code === 'ECONNABORTED') {\n        setError('Request timeout. The ML model is taking longer than expected.');\n      } else {\n        setError(err.response?.data?.message || 'Failed to fetch predictions');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'online': return 'text-green-600';\n      case 'offline': return 'text-red-600';\n      case 'checking': return 'text-yellow-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'online': return 'Backend Online';\n      case 'offline': return 'Backend Offline';\n      case 'checking': return 'Checking...';\n      default: return 'Unknown';\n    }\n  };\n\n  // Prepare chart data\n  const chartData = stocks.map((stock, index) => ({\n    name: stock.symbol,\n    price: stock.predictedPrice,\n    company: stock.company\n  }));\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-4 md:p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n            AI Stock Price Predictions\n          </h1>\n          <p className=\"text-lg text-gray-600 mb-6\">\n            Machine learning powered predictions for 20 major companies\n          </p>\n          \n          {/* Backend Status */}\n          <div className=\"flex items-center justify-center space-x-4 mb-6\">\n            <div className={`flex items-center space-x-2 ${getStatusColor(backendStatus)}`}>\n              <div className={`w-3 h-3 rounded-full ${\n                backendStatus === 'online' ? 'bg-green-500' : \n                backendStatus === 'offline' ? 'bg-red-500' : 'bg-yellow-500'\n              }`}></div>\n              <span className=\"font-medium\">{getStatusText(backendStatus)}</span>\n            </div>\n            <button\n              onClick={checkBackendHealth}\n              className=\"text-sm text-blue-600 hover:text-blue-800 underline\"\n            >\n              Refresh Status\n            </button>\n          </div>\n        </div>\n\n        {/* Control Panel */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0\">\n            <div className=\"text-sm text-gray-600\">\n              {lastUpdated && (\n                <p>Last updated: {lastUpdated}</p>\n              )}\n              {!lastUpdated && (\n                <p>Click the button to generate AI predictions</p>\n              )}\n            </div>\n            \n            <button \n              onClick={fetchPredictions} \n              disabled={loading || backendStatus !== 'online'}\n              className={`px-8 py-3 rounded-lg font-semibold transition-all duration-200 ${\n                loading || backendStatus !== 'online'\n                  ? 'bg-gray-400 cursor-not-allowed' \n                  : 'bg-blue-600 hover:bg-blue-700 hover:shadow-lg transform hover:-translate-y-1'\n              } text-white`}\n            >\n              {loading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                  <span>Generating Predictions...</span>\n                </div>\n              ) : (\n                'Generate AI Predictions'\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-8\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-5 h-5 bg-red-500 rounded-full flex items-center justify-center\">\n                <span className=\"text-white text-xs font-bold\">!</span>\n              </div>\n              <div>\n                <h3 className=\"text-red-800 font-semibold\">Error</h3>\n                <p className=\"text-red-700\">{error}</p>\n                {backendStatus === 'offline' && (\n                  <p className=\"text-sm text-red-600 mt-2\">\n                    To start the backend: <code className=\"bg-red-100 px-2 py-1 rounded\">cd backend && python start.py</code>\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Results */}\n        {stocks.length > 0 && (\n          <div className=\"space-y-8\">\n            {/* Statistics Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Total Companies</h3>\n                <p className=\"text-2xl font-bold text-gray-900\">{stocks.length}</p>\n              </div>\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Avg. Price</h3>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  ${(stocks.reduce((sum, stock) => sum + stock.predictedPrice, 0) / stocks.length).toFixed(2)}\n                </p>\n              </div>\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Highest Price</h3>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  ${Math.max(...stocks.map(s => s.predictedPrice)).toFixed(2)}\n                </p>\n              </div>\n              <div className=\"bg-white rounded-lg shadow p-6\">\n                <h3 className=\"text-sm font-medium text-gray-500\">Lowest Price</h3>\n                <p className=\"text-2xl font-bold text-red-600\">\n                  ${Math.min(...stocks.map(s => s.predictedPrice)).toFixed(2)}\n                </p>\n              </div>\n            </div>\n\n            {/* Charts */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Line Chart */}\n              <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Price Trend</h2>\n                <div className=\"h-80\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip \n                        formatter={(value: any, name: any, props: any) => [\n                          `$${value}`, \n                          'Predicted Price'\n                        ]}\n                        labelFormatter={(label: any) => `${label}`}\n                      />\n                      <Legend />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"price\" \n                        stroke=\"#3b82f6\" \n                        strokeWidth={2}\n                        dot={{ fill: '#3b82f6', strokeWidth: 2, r: 4 }}\n                        activeDot={{ r: 6, stroke: '#3b82f6', strokeWidth: 2 }} \n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n\n              {/* Bar Chart */}\n              <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Price Comparison</h2>\n                <div className=\"h-80\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip \n                        formatter={(value: any) => [`$${value}`, 'Predicted Price']}\n                      />\n                      <Bar dataKey=\"price\" fill=\"#3b82f6\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n            </div>\n\n            {/* Data Table */}\n            <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n              <div className=\"px-6 py-4 border-b border-gray-200\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Detailed Predictions</h2>\n              </div>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Company\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Symbol\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Predicted Price\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {stocks.map((stock, index) => (\n                      <tr key={index} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">{stock.company}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                            {stock.symbol}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-semibold text-gray-900\">${stock.predictedPrice}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          {stock.note ? (\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                              Fallback\n                            </span>\n                          ) : (\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                              AI Predicted\n                            </span>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Instructions */}\n        {stocks.length === 0 && !loading && !error && (\n          <div className=\"bg-white rounded-lg shadow-lg p-8 text-center\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">Ready to Predict</h2>\n            <p className=\"text-gray-600 mb-6\">\n              Click the \"Generate AI Predictions\" button to get machine learning powered stock price predictions for 20 major companies.\n            </p>\n            <div className=\"text-sm text-gray-500\">\n              <p>Make sure the Python Flask backend is running on port 5000</p>\n              <code className=\"bg-gray-100 px-2 py-1 rounded mt-2 inline-block\">cd backend && python start.py</code>\n            </div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}